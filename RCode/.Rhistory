en <- as.data.frame(CSPEngulfing(Dax_xts))
Dax <- cbind(Dax,en)
ar <- aroon(Dax$Close,n=20)
Dax <- cbind(Dax,ar)
a <- candle_engulf_aroon(Dax,0, "Dax")
a
CSPEngulfing
Dax = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/Dax_2000_d.csv",stringsAsFactors = FALSE)
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
Dax_xts <- xts(Dax[,c(2,3,4,5)],Dax$Date)
dj <- as.data.frame(CSPDoji(Dax_xts))
Dax <- cbind(Dax,dj)
ar <- aroon(Dax$Close,n=20)
Dax <- cbind(Dax,ar)
tail(Dax)
sum(Dax$Doji)
sum(Dax$DragonflyDoji)
sum(Dax$GravestoneDoji)
Dax = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/Dax_2000_d.csv",stringsAsFactors = FALSE)
Dax_xts <- xts(Dax[,c(2,3,4,5)],Dax$Date)
dj <- as.data.frame(CSPDoji(Dax_xts))
library(candlesticks)
Dax = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/Dax_2000_d.csv",stringsAsFactors = FALSE)
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
Dax_xts <- xts(Dax[,c(2,3,4,5)],Dax$Date)
dj <- as.data.frame(CSPDoji(Dax_xts))
Dax <- cbind(Dax,dj)
ar <- aroon(Dax$Close,n=20)
Dax <- cbind(Dax,ar)
sum(Dax$Doji)
sum(Dax$DragonflyDoji)
sum(Dax$GravestoneDoji)
tail(Dax)
source("D:\\Allan\\DropBox\\MSc\\Dissertation\\Thesis\\RCode\\Candle_Doji_aroon.R")
Dax = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/Dax_2000_d.csv",stringsAsFactors = FALSE)
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
Dax_xts <- xts(Dax[,c(2,3,4,5)],Dax$Date)
dj <- as.data.frame(CSPDoji(Dax_xts))
Dax <- cbind(Dax,dj)
ar <- aroon(Dax$Close,n=20)
Dax <- cbind(Dax,ar)
a <- candle_doji_aroon(Dax,0, "Dax")
source("D:\\Allan\\DropBox\\MSc\\Dissertation\\Thesis\\RCode\\Candle_Doji_aroon.R")
source("D:\\Allan\\DropBox\\MSc\\Dissertation\\Thesis\\RCode\\Candle_Doji_aroon.R")
Dax = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/Dax_2000_d.csv",stringsAsFactors = FALSE)
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
Dax_xts <- xts(Dax[,c(2,3,4,5)],Dax$Date)
dj <- as.data.frame(CSPDoji(Dax_xts))
Dax <- cbind(Dax,dj)
ar <- aroon(Dax$Close,n=20)
Dax <- cbind(Dax,ar)
a <- candle_doji_aroon(Dax,0, "Dax")
a
#dj <- as.data.frame(CSPDoji(Dax_xts))
Dax = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/Dax_2000_d.csv",stringsAsFactors = FALSE)
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
Dax_xts <- xts(Dax[,c(2,3,4,5)],Dax$Date)
dj <- as.data.frame(CSPDoji(Dax_xts))
tail(dax)
tail(dj)
sum(dj$Doji)
sum(dj$DragonflyDoji)
sum(dj$GravestoneDoji)
class(dj)
nrow(dj)
tail(dj)
tail(Dax)
Dax <- cbind(Dax,dj)
sum(Dax$Doji)
sum(Dax$DragonflyDoji)
sum(Dax$GravestoneDoji)
dj <- as.data.frame(CSPDoji(Dax_xts))
tail(dj)
is.na(dj$Doji)
sum(is.na(dj$Doji))
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
Dax$Date <- rownames(Dax)
Dax <- Dax[,c(6,1,2,3,4)]
tail(Dax)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
Dax$Date <- rownames(Dax)
Dax <- Dax[,c(6,1,2,3,4)]
tail(Dax)
str(Dax)
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
str(Dax)
Dax_x <- getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d"))
str(Dax_x)
Dax_x$Date <- rownames(Dax_x)
str(Dax_x)
tail(Dax_X)
tail(Dax_x)
str(Dax_x)
tail(Dax_x)
hh <- CSPHammer(Dax)
hh <- CSPHammer(Dax_x)
hh
Dax_X <- cbind(Dax_X,hh)
Dax_X <- cbind(Dax_x,hh)
tail(Dax_x)
Dax_X <- cbind(Dax_x,hh)
Dax_x <- cbind(Dax_x,hh)
tail(Dax_x)
xt <- xtable(tail(Dax_x,n=15), digits = 2,
dax <- as.data.frame(Dax_x[,])
Dax_x <- as.data.frame( getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")) )
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
library(candlesticks)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
Dax <- getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d"))
library(TTR)
Dax <- getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d"))
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
tail(Dax)
library(xts)
Dax <- getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d"))
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
library(TTR)
library(xtable)
library(candlesticks)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
library(quantmod)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
Dax <- getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d"))
Dax = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/Dax_2000_d.csv",stringsAsFactors = FALSE)
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
Dax_xts <- xts(Dax[,c(2,3,4,5)],Dax$Date)
hh <- CSPEngulfing(Dax_xts)
Dax_xts <- cbind(Dax_xts,hh)
sum(Dax_xts$Bull.Engulfing)
xt <- xtable(tail(Dax_xts), digits = 2,
getSymbols('MSFT',src='yahoo')
tail(MFST)
tail(MSFT)
getSymbols('^GDAXI',src='yahoo')
tail(MSFT)
getSymbols('^GDAXI',src='yahoo',from = "2014-01-01", to = Sys.Date(),)
getSymbols('^GDAXI',src='yahoo',from = "2014-01-01", to = Sys.Date())
tail(^GDAXI)
tail(GDAXI)
getSymbols.yahoo('^GDAXI',from = "2014-01-01", to = Sys.Date())
getSymbols('^GDAXI',src='yahoo',Sys.Date() - 50, to = Sys.Date())
getSymbols('^GDAXI',src='yahoo',from = Sys.Date() - 50, to = Sys.Date())
tail(GDAXI)
getSymbols('^GDAXI',src='yahoo',from = Sys.Date() - 50, to = Sys.Date())
Dax <- GDAXI
Dax$Date <- rownames(GDAXI)
Dax <- Dax[,c(6,1,2,3,4)]
tail(Dax)
rownames(Dax) <- c("Date", "Open","High","Low","Close")
tail(Dax)
names(Dax) <- c("Date", "Open","High","Low","Close")
tail(Dax)
ar <- aroon(Dax$Close, n=20)
Dax <- cbind(Dax, ar)
tail(Dax)
align(xt) <- c('l','l','c','c','c','c','c','c','c','c','c','c','c','c','c')
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
str(Dax)
source('~/.active-rstudio-document', echo=TRUE)
getSymbols('^GDAXI',src='yahoo',from = Sys.Date() - 50, to = Sys.Date())
getSymbols('^GDAXI',src='yahoo',from = "2014-01-01", to = Sys.Date())
library(quantmod)
getSymbols('^GDAXI',src='yahoo',from = "2014-01-01", to = Sys.Date())
tail(GDAXI)
getSymbols('^GDAXI',src='yahoo')
library(TTR)
ibm <- getYahooData("IBM", 1999.4.4, 2..5.6.7)
ibm <- getYahooData("IBM", 199944, 20050607)
ibm <- getYahooData("IBM", 1999044, 20050607)
nyse.symbols <- stockSymbols("NYSE")
tail(nyse.symbols)
getSymbols('^GDAXI',src='yahoo',from = Sys.Date() - 50, to = Sys.Date())
Dax <- getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d"))
Mkt = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/CAC_2000_d.csv",stringsAsFactors = FALSE)
sma.value <- SMA(Mkt["Close"], 5)
atr <- ATR(Mkt[,c("High","Low","Close")], n=14)
tail(atr)
Mkt <- cbind(Mkt,atr$atr)
class(atr)
Mkt <- cbind(Mkt,atr)
tail(Mkt)
ali <- c('l','l')
ali
ali <- c(rep('c'))
ali
ali <- c(rep('c'),10)
ali
ali <- c(rep('c',10))
ali
ali <- c(ali, rep('c',10))
ali
ali <- c('l','l')
ali
ali <- c(ali, rep('c',10))
ali
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
Dax$Date <- rownames(Dax)
Dax <- Dax[,c(6,1,2,3,4)]
atr <- ATR(Mkt[,c("High","Low","Close")], n=14)
class(atr)
Mkt <- cbind(Mkt,atr)
tail(Mkt)
class(Mkt)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
Dax$Date <- rownames(Dax)
tail(Dax)
atr <- ATR(Mkt[,c(2,3,4)], n=14)
class(atr)
Mkt <- cbind(Mkt,atr)
tail(Mkt)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")))
Dax$Date <- rownames(Dax)
tail(Dax)
Dax <- Dax[,c(6,1,2,3,4)]
#atr <- ATR(Mkt[,c("High","Low","Close")], n=14)
atr <- ATR(Mkt[,c(2,3,4)], n=14)
atr <- ATR(Dax[,c(2,3,4)], n=14)
Mkt = read.csv("D:/Allan/DropBox/MSc/Dissertation/Thesis/Data/CAC_2000_d.csv",stringsAsFactors = FALSE)
atr <- ATR(Mkt[,c("High","Low","Close")], n=14)
Mkt <- cbind(Mkt,atr)
tail(Mkt)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d"),,stringsAsFactors = FALSE))
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")),stringsAsFactors = FALSE)
Dax$Date <- rownames(Dax)
tail(Dax)
Dax <- Dax[,c(6,1,2,3,4)]
atr <- ATR(Dax[,c(2,3,4)], n=14)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")),stringsAsFactors = FALSE)
class(Dax)
Dax2 <- getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d"))
class(Dax2)
tail(Dax)
Dax$Date <- rownames(Dax)
tail(Dax)
str(Dax)
Dax$Date <- as.POSIXct(Dax$Date,format='%d/%m/%Y')
tail(Dax)
Dax$Date <- as.POSIXct(Dax$Date,format='%Y/%m/%d')
tail(Dax)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")),stringsAsFactors = FALSE)
class(Dax)
Dax$Date <- rownames(Dax)
tail(Dax)
Dax$Date <- as.POSIXct(Dax$Date,format='%Y/%m/%d')
tail(Dax)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")),stringsAsFactors = FALSE)
class(Dax)
Dax$Date <- rownames(Dax)
tail(Dax)
str(Dax)
Dax$Date <- as.POSIXct(Dax$Date,format='%Y-%m-%d')
tail(Dax)
Dax <- Dax[,c(6,1,2,3,4)]
atr <- ATR(Dax[,c(2,3,4)], n=12)
str(Dax)
Dax <- as.data.frame(getYahooData("^GDAXI", format(Sys.Date()-50, format="%Y%m%d"), format(Sys.Date(), format="%Y%m%d")),stringsAsFactors = FALSE)
tail(Dax)
atr <- ATR(Dax[,c(2,3,4)], n=12)
str(Dax)
atr <- ATR(Mkt[,c("High","Low","Close")], n=14)
Dax <- Dax[,c(6,1,2,3,4)]
atr <- ATR(Dax[,c("High","Low","Close")], n=14)
atr <- ATR(Dax[,c(2,3,4)], n=12)
library(forecast)
library(xtable)
library(forecast)
library(forecast)
mean_model <- meanf(Mkt_train, h=5)
library(forecast)
install.packages("forecast")
library(forecast)
r_p_ind <- function(Mkt, nr){
#browser()
Mkt <- AddPrev(Mkt)
au <- Mkt$aroonUp[nr]
ad <- Mkt$aroonDn[nr]
os <- Mkt$oscillator[nr]
df <- Mkt$Diff[nr]
c <- au_df(Mkt,au,df)
d <- ad_df(Mkt,ad,df)
e <- os_df(Mkt,os,df)
e2 <- c+d+e
return(c(c,d,e,e2))
}
Mkt_ta <- read.csv("D:/Allan/DropBox/RWorkingDir/Trading/Data/Oz_ta.csv")
Mkt_ta$Date[nrow(Mkt_ta)]
ln <- nrow(Mkt_ta) ;ln
lw <- ln - 300 ;lw
Mkt_ta <- Mkt_ta[lw:ln,]
ln <- nrow(Mkt_ta) ;ln
r_p_ind(Mkt_ta, ln)
source("D:/Allan/DropBox/RWorkingDir/Trading/Dax/addTA_fnc.R")
r_p_ind2(Mkt_ta, ln)
r_p_ind2 <- function(Mkt, nr){
#browser()
Mkt <- AddPrev(Mkt)
au <- Mkt$aroonUp[nr]
ad <- Mkt$aroonDn[nr]
os <- Mkt$oscillator[nr]
df <- Mkt$Diff[nr]
c <- au_df(Mkt,au,df)
d <- ad_df(Mkt,ad,df)
e <- os_df(Mkt,os,df)
e2 <- c+d+e
return(c(c,d,e,e2))
}
r_p_ind2(Mkt_ta, ln)
ln <- nrow(Mkt)
r_p_ind2 <- function(Mkt, nr){
#browser()
Mkt <- AddPrev(Mkt)
au <- Mkt$aroonUp[nr]
ad <- Mkt$aroonDn[nr]
os <- Mkt$oscillator[nr]
df <- Mkt$Diff[nr]
ln <- nrow(Mkt)
Mkt <- Mkt[-ln,]
c <- au_df(Mkt,au,df)
d <- ad_df(Mkt,ad,df)
e <- os_df(Mkt,os,df)
e2 <- c+d+e
return(c(c,d,e,e2))
}
r_p_ind2(Mkt_ta, ln)
source('D:/Allan/DropBox/Dmin/DMin.R')
dat <- tail(Mkt_test_df)
dig <- 0
cap <- c("One-step ahead forecast for FTSE 100 generated from ARIMA(2,1,3) model.",
"Forecast for FTSE 100 generated from the ARIMA model")
lab = 'tab:chp_ts:ftse_100_fcast'
filname ='../Tables/chp_ts_ftse_100_fcast.tex'
inclrnam=F
print_xt(dat,dig,cap,lab,al,filname,inclrnam)
library(forecast)
library(xtable)
source("../RCode/Utils.R")
source("../RCode/es_1.R")
source("../RCode/ts_1.R")
source("../RCode/ts_2.R")
source("../RCode/ts_3.R")
source("../RCode/ts_3a.R")
source("../RCode/ts_4.R")
source("../RCode//NaiveReversePrev.R")
fil <- c("../Data/Dax_2000_d.csv",
"../Data/CAC_2000_d.csv",
"../Data/F100_2000_d.csv",
"../Data/Dow_2000_d.csv",
"../Data/N225_2000_d.csv",
"../Data/Oz_2000.csv")
nm <- c("DAX", "CAC", "FTSE", "Dow", "Nikkei", "AORD")
df10 <- as.data.frame(matrix(seq(11),nrow=1,ncol=11))
std6 <- c(1,3,4,5,7,8,10)
misc_col <- 11
dat <- tail(Mkt_test_df)
dig <- 0
cap <- c("One-step ahead forecast for FTSE 100 generated from ARIMA(2,1,3) model.",
"Forecast for FTSE 100 generated from the ARIMA model")
lab = 'tab:chp_ts:ftse_100_fcast'
filname ='../Tables/chp_ts_ftse_100_fcast.tex'
inclrnam=F
print_xt(dat,dig,cap,lab,al,filname,inclrnam)
# 2. ARIMA ----------------------
Mkt <- read.csv("../Data/F100_2000_d.csv")
Mkt_ts <- ts(Mkt$Close)
Mkt_train <- window(Mkt_ts, end=2999.99)
Mkt_test <- window(Mkt_ts, start=3000)
# -------------------------------
# 2.1. Plot the data. Identify any unusual observations.
savepdf("chp_ts_ftse_2000-13")
plot.ts(Mkt_train,
main="FTSE 2000 - 2013",
xlab="Days since 2000",
ylab="FTSE Closing Price",
xlim=c(100, 3000))
dev.off()
# 2.3. If the data are non-stationary: take first differences of the
#data until the data are stationary.
savepdf("chp_ts_ftse_2000-13_diff")
plot(diff(Mkt_train),
main="First Difference of FTSE 2000 - 2013",
xlab="Days since 2000",
ylab="FTSE Daily Price Movement",
xlim=c(100, 3000))
dev.off()
# -------------------------------------
# 2.4. Examine the ACF/PACF: Is an AR(p) or MA(q) model appropriate?
# all 3 incl diff
savepdf("chp_ts_ftse_2000-13_diff_acf_tsd")
tsdisplay(diff(Mkt_train),main="FTSE 100 between 2000 and 2013",
xlab="Days since 2000",
ylab="FTSE Daily Price Movement")
dev.off()
# a ACF
savepdf("chp_ts_ftse_2000-13_diff_acf")
plot(Acf(diff(Mkt_train)),
main="ACF of FTSE 100 between 2000 and 2013",
,ylim=c(-0.08, 0.08))
dev.off()
# a PACF
savepdf("chp_ts_ftse_2000-13_diff_pacf")
plot(Pacf(diff(Mkt_train)),
main="PACF of FTSE 100 between 2000 and 2013",
ylim=c(-0.08, 0.08))
dev.off()
# ----------------------------------------------------
# 2.5. Try your chosen model(s), and use the AICc to search for a better model.
mod_ar <- function(Mkt_ts, ord, nm){
res <- t(as.data.frame(rep(0,4)))
mod <- Arima(Mkt_ts, order=ord)
res[1,1] <- nm
res[1,2] <- round(mod$aic,1)
res[1,3] <- round(mod$aicc,1)
res[1,4] <- round(mod$bic,1)
return(res)
}
results <- t(as.data.frame(rep(0,4)))
colnames(results) <- c('Model','AIC','AICc','BIC')
r2 <- mod_ar(Mkt_train, c(3,1,1), 'ARIMA(3,1,1)')
results <- rbind(results,r2)
r2 <- mod_ar(Mkt_train, c(3,1,2), 'ARIMA(3,1,2)')
results <- rbind(results,r2)
r2 <- mod_ar(Mkt_train, c(3,1,3), 'ARIMA(3,1,3)')
results <- rbind(results,r2)
r2 <- mod_ar(Mkt_train, c(2,1,1), 'ARIMA(2,1,1)')
results <- rbind(results,r2)
r2 <- mod_ar(Mkt_train, c(2,1,2), 'ARIMA(2,1,2)')
results <- rbind(results,r2)
r2 <- mod_ar(Mkt_train, c(2,1,3), 'ARIMA(2,1,3)')
results <- rbind(results,r2)
results <- results[-1,]
# produce latex table
dat <- results
dig <- c(0,0,2,2,2)
cap <- c("AIC, AICc and BIC results from alternative ARIMA models.",
"AIC, AICc and BIC results from alternative ARIMA models")
lab = 'tab:chp_ts:arima_res_r'
filname ='../Tables/chp_ts_arima_res_r.tex'
inclrnam=F
print_xt(dat,dig,cap,lab,al,filname,inclrnam)
# ----------------------------------------------------
# 2.6. Check the residuals from your chosen model by plotting the ACF of the residuals,
#and doing a portmanteau test of the residuals.
#If they do not look like white noise, try a modified model.
model_used_for_res <- Arima(Mkt_train, order=c(2,1,3))
model_name <- forecast(model_used_for_res)$method
# a mean of residual
residual <- model_used_for_res$residuals
savepdf("chp_ts_ftse_2000-13_mean_residuals")
plot(residual, main = paste("Residuals from model of", model_name),
ylab="", xlab="Day")
dev.off()
# b. acf of residual
savepdf("chp_ts_ftse_2000-13_acf_residuals")
Acf(residuals(model_used_for_res),
main= paste("ACF of Residuals of", model_name))
dev.off()
# d. histogram of residuals - normal distribution
savepdf("chp_ts_ftse_2000-13_hist_residuals")
hist(residual, nclass="FD", main="Histogram of residuals")
dev.off()
# e. portmanteau tests
bb <- Box.test(residuals(model_used_for_res), lag=24, fitdf=4, type="Ljung")
results_bc <- as.data.frame(rep(0,3))
results_bc[1,1] <- round(bb$p.value,4)
results_bc[2,1] <- round(bb$parameter)
results_bc[3,1] <- round(bb$statistic)
colnames(results_bc) <- c(forecast(model_used_for_res)$method)
rownames(results_bc) <- c('p-value','x-squared','df')
results_bc_t <- t(results_bc)
dat <- results_bc_t
dig <- c(0,4,0,0)
cap <- c("Box Ljung test of FTSE 100 ARIMA model residuals.",
"Box Ljung test of FTSE 100 ARIMA model residuals")
lab = 'tab:chp_ts:arima_res_rbox_l'
filname ='../Tables/chp_ts_arima_res_r_box_l.tex'
inclrnam=TRUE
print_xt(dat,dig,cap,lab,al,filname,inclrnam)
# 2.7 Once the residuals look like white noise, calculate forecasts.
model_used_for_res <- Arima(Mkt_ts, order=c(2,1,3))
model_name <- forecast(model_used_for_res)$method
arima_man_fcast <- forecast.Arima(model_used_for_res,Mkt_test)
fitted.data <- as.data.frame(arima_man_fcast$fitted);
Mkt_test_df <- cbind(Mkt,fitted.data)
colnames(Mkt_test_df) <- c('Date','Open','High','Low','Close','Forecast')
# plot the results
dat <- tail(Mkt_test_df)
dig <- 0
cap <- c("One-step ahead forecast for FTSE 100 generated from ARIMA(2,1,3) model.",
"Forecast for FTSE 100 generated from the ARIMA model")
lab = 'tab:chp_ts:ftse_100_fcast'
filname ='../Tables/chp_ts_ftse_100_fcast.tex'
inclrnam=F
print_xt(dat,dig,cap,lab,al,filname,inclrnam)
source('D:/Allan/DropBox/MSc/Dissertation/Thesis/RCode/Chapter5.R', echo=TRUE)
dat
source('D:/Allan/DropBox/MSc/Dissertation/Thesis/RCode/Chapter4.R', echo=TRUE)
Dx
Dx2
total_res
colnames(total_res)[11] <- 'Methodology'
Dx <- total_res[total_res$Mkt == 'DAX',]
Dx2 <- Dx[c(11,3,4,7,10)]
Dx2
dat <- Dx2
dig <- 2
cap = c('Chapter 4 Dax Results',
'Chapter 4 Dax Results')
lab = 'tab:chp6:dax_summary'
filname ='../Tables/chp_6_dax_summary.tex'
inclrnam=FALSE
print_xt(dat,dig,cap,lab,al,filname,inclrnam)
